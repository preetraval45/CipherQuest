{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raval\\\\OneDrive - University of North Carolina at Charlotte\\\\Desktop\\\\HTML CSS\\\\CipherQuest\\\\frontend\\\\src\\\\pages\\\\AIAssistantPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './AIAssistantPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAssistantPage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'ai',\n    content: 'Hello! I\\'m your AI cybersecurity tutor. I can help you with:\\n\\n• Explaining security concepts\\n• Debugging code issues\\n• Providing learning resources\\n• Answering technical questions\\n\\nWhat would you like to learn about today?',\n    timestamp: new Date()\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const messagesEndRef = useRef(null);\n  const quickActions = ['Explain encryption', 'Help with SQL injection', 'What is XSS?', 'Network security basics', 'Show me a CTF challenge'];\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse = generateAIResponse(inputMessage);\n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 1500);\n  };\n  const generateAIResponse = userInput => {\n    const responses = {\n      'encryption': {\n        content: `**Encryption** is the process of converting plain text into ciphertext to protect sensitive information.\\n\\n**Types of Encryption:**\\n• **Symmetric**: Same key for encryption/decryption (AES, DES)\\n• **Asymmetric**: Public/private key pairs (RSA, ECC)\\n\\n**Example (Caesar Cipher):**\\n\\`\\`\\`python\\n# Simple Caesar cipher implementation\\ndef caesar_encrypt(text, shift):\\n    result = \"\"\\n    for char in text:\\n        if char.isalpha():\\n            ascii_offset = 65 if char.isupper() else 97\\n            result += chr((ord(char) - ascii_offset + shift) % 26 + ascii_offset)\\n        else:\\n            result += char\\n    return result\\n\\`\\`\\``,\n        type: 'ai'\n      },\n      'sql injection': {\n        content: `**SQL Injection** is a code injection technique that exploits vulnerabilities in database queries.\\n\\n**Common Types:**\\n• Union-based\\n• Boolean-based\\n• Time-based\\n• Error-based\\n\\n**Prevention:**\\n• Use parameterized queries\\n• Input validation\\n• Least privilege principle\\n• WAF (Web Application Firewall)\\n\\n**Example Prevention:**\\n\\`\\`\\`python\\n# Vulnerable code\\nquery = f\"SELECT * FROM users WHERE id = {user_input}\"\\n\\n# Secure code\\nquery = \"SELECT * FROM users WHERE id = %s\"\\ncursor.execute(query, (user_input,))\\n\\`\\`\\``,\n        type: 'ai'\n      },\n      'xss': {\n        content: `**Cross-Site Scripting (XSS)** allows attackers to inject malicious scripts into web pages.\\n\\n**Types:**\\n• **Reflected XSS**: Script reflected in response\\n• **Stored XSS**: Script stored in database\\n• **DOM XSS**: Script executed in DOM\\n\\n**Prevention:**\\n• Input sanitization\\n• Output encoding\\n• Content Security Policy (CSP)\\n• HttpOnly cookies\\n\\n**Example:**\\n\\`\\`\\`html\\n<!-- Vulnerable -->\\n<div id=\"user-input\">${userInput}</div>\\n\\n<!-- Secure -->\\n<div id=\"user-input\">${escapeHtml(userInput)}</div>\\n\\`\\`\\``,\n        type: 'ai'\n      },\n      'network security': {\n        content: `**Network Security** protects network infrastructure and data from unauthorized access.\\n\\n**Key Concepts:**\\n• **Firewalls**: Control traffic flow\\n• **VPNs**: Secure remote access\\n• **IDS/IPS**: Intrusion detection/prevention\\n• **Encryption**: Data protection\\n\\n**Common Threats:**\\n• Man-in-the-Middle attacks\\n• DDoS attacks\\n• Packet sniffing\\n• ARP spoofing\\n\\n**Best Practices:**\\n• Regular security updates\\n• Network segmentation\\n• Access control\\n• Monitoring and logging`,\n        type: 'ai'\n      },\n      'ctf': {\n        content: `**Capture The Flag (CTF)** challenges test cybersecurity skills in a competitive environment.\\n\\n**Challenge Types:**\\n• **Web**: Web application vulnerabilities\\n• **Forensics**: File analysis and recovery\\n• **Crypto**: Cryptography challenges\\n• **Pwn**: Binary exploitation\\n• **Reverse**: Reverse engineering\\n\\n**Example Challenge:**\\n\\`\\`\\`\\nFlag format: CTF{...}\\nChallenge: Decrypt this message\\nCiphertext: \"KHOOR ZRUOG\"\\nHint: Think about shifting letters\\n\\`\\`\\`\\n\\n**Tools:**\\n• Burp Suite (Web)\\n• Wireshark (Network)\\n• Ghidra (Reverse)\\n• CyberChef (Crypto)`,\n        type: 'ai'\n      }\n    };\n    const lowerInput = userInput.toLowerCase();\n    for (const [key, response] of Object.entries(responses)) {\n      if (lowerInput.includes(key)) {\n        return {\n          id: Date.now(),\n          content: response.content,\n          timestamp: new Date(),\n          type: response.type\n        };\n      }\n    }\n\n    // Default response\n    return {\n      id: Date.now(),\n      content: `I understand you're asking about \"${userInput}\". This is a great cybersecurity topic! Let me provide you with some information and resources to help you learn more.\\n\\n**Key Points:**\\n• Always practice ethical hacking\\n• Stay updated with latest threats\\n• Use proper tools and techniques\\n• Follow responsible disclosure\\n\\nWould you like me to elaborate on any specific aspect of this topic?`,\n      timestamp: new Date(),\n      type: 'ai'\n    };\n  };\n  const handleQuickAction = action => {\n    setInputMessage(action);\n  };\n  const handleVoiceInput = () => {\n    setIsListening(!isListening);\n    // In a real app, this would integrate with Web Speech API\n    if (!isListening) {\n      // Simulate voice input\n      setTimeout(() => {\n        setInputMessage('Explain network security');\n        setIsListening(false);\n      }, 2000);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatMessage = content => {\n    // Simple markdown-like formatting\n    return content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, '<pre><code>$2</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>').replace(/\\n/g, '<br>');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-assistant-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-header glass-effect\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ai-icon\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"ai-name\",\n            children: \"CyberAI Tutor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ai-status\",\n            children: isTyping ? 'Typing...' : 'Online'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          title: \"Export Chat\",\n          children: \"\\uD83D\\uDCE5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          title: \"Clear Chat\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-actions\",\n      children: quickActions.map((action, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quick-action-btn\",\n        onClick: () => handleQuickAction(action),\n        children: action\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container glass-effect\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.type === 'ai' ? '🤖' : '👤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              dangerouslySetInnerHTML: {\n                __html: formatMessage(message.content)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: message.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container glass-effect\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask me anything about cybersecurity...\",\n          className: \"message-input\",\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `voice-btn ${isListening ? 'listening' : ''}`,\n            onClick: handleVoiceInput,\n            title: \"Voice Input\",\n            children: isListening ? '🔴' : '🎤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: handleSendMessage,\n            disabled: !inputMessage.trim(),\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAssistantPage, \"A0Tpv9cCDbEW+MoJ7Klt66sCjjc=\");\n_c = AIAssistantPage;\nexport default AIAssistantPage;\nvar _c;\n$RefreshReg$(_c, \"AIAssistantPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","AIAssistantPage","_s","messages","setMessages","id","type","content","timestamp","Date","inputMessage","setInputMessage","isTyping","setIsTyping","isListening","setIsListening","messagesEndRef","quickActions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","now","prev","setTimeout","aiResponse","generateAIResponse","userInput","responses","escapeHtml","lowerInput","toLowerCase","key","response","Object","entries","includes","handleQuickAction","action","handleVoiceInput","handleKeyPress","e","shiftKey","preventDefault","formatMessage","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","map","index","onClick","message","dangerouslySetInnerHTML","__html","toLocaleTimeString","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/raval/OneDrive - University of North Carolina at Charlotte/Desktop/HTML CSS/CipherQuest/frontend/src/pages/AIAssistantPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './AIAssistantPage.css';\r\n\r\nconst AIAssistantPage = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'ai',\r\n      content: 'Hello! I\\'m your AI cybersecurity tutor. I can help you with:\\n\\n• Explaining security concepts\\n• Debugging code issues\\n• Providing learning resources\\n• Answering technical questions\\n\\nWhat would you like to learn about today?',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const quickActions = [\r\n    'Explain encryption',\r\n    'Help with SQL injection',\r\n    'What is XSS?',\r\n    'Network security basics',\r\n    'Show me a CTF challenge'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate AI response\r\n    setTimeout(() => {\r\n      const aiResponse = generateAIResponse(inputMessage);\r\n      setMessages(prev => [...prev, aiResponse]);\r\n      setIsTyping(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const generateAIResponse = (userInput) => {\r\n    const responses = {\r\n      'encryption': {\r\n        content: `**Encryption** is the process of converting plain text into ciphertext to protect sensitive information.\\n\\n**Types of Encryption:**\\n• **Symmetric**: Same key for encryption/decryption (AES, DES)\\n• **Asymmetric**: Public/private key pairs (RSA, ECC)\\n\\n**Example (Caesar Cipher):**\\n\\`\\`\\`python\\n# Simple Caesar cipher implementation\\ndef caesar_encrypt(text, shift):\\n    result = \"\"\\n    for char in text:\\n        if char.isalpha():\\n            ascii_offset = 65 if char.isupper() else 97\\n            result += chr((ord(char) - ascii_offset + shift) % 26 + ascii_offset)\\n        else:\\n            result += char\\n    return result\\n\\`\\`\\``,\r\n        type: 'ai'\r\n      },\r\n      'sql injection': {\r\n        content: `**SQL Injection** is a code injection technique that exploits vulnerabilities in database queries.\\n\\n**Common Types:**\\n• Union-based\\n• Boolean-based\\n• Time-based\\n• Error-based\\n\\n**Prevention:**\\n• Use parameterized queries\\n• Input validation\\n• Least privilege principle\\n• WAF (Web Application Firewall)\\n\\n**Example Prevention:**\\n\\`\\`\\`python\\n# Vulnerable code\\nquery = f\"SELECT * FROM users WHERE id = {user_input}\"\\n\\n# Secure code\\nquery = \"SELECT * FROM users WHERE id = %s\"\\ncursor.execute(query, (user_input,))\\n\\`\\`\\``,\r\n        type: 'ai'\r\n      },\r\n      'xss': {\r\n        content: `**Cross-Site Scripting (XSS)** allows attackers to inject malicious scripts into web pages.\\n\\n**Types:**\\n• **Reflected XSS**: Script reflected in response\\n• **Stored XSS**: Script stored in database\\n• **DOM XSS**: Script executed in DOM\\n\\n**Prevention:**\\n• Input sanitization\\n• Output encoding\\n• Content Security Policy (CSP)\\n• HttpOnly cookies\\n\\n**Example:**\\n\\`\\`\\`html\\n<!-- Vulnerable -->\\n<div id=\"user-input\">${userInput}</div>\\n\\n<!-- Secure -->\\n<div id=\"user-input\">${escapeHtml(userInput)}</div>\\n\\`\\`\\``,\r\n        type: 'ai'\r\n      },\r\n      'network security': {\r\n        content: `**Network Security** protects network infrastructure and data from unauthorized access.\\n\\n**Key Concepts:**\\n• **Firewalls**: Control traffic flow\\n• **VPNs**: Secure remote access\\n• **IDS/IPS**: Intrusion detection/prevention\\n• **Encryption**: Data protection\\n\\n**Common Threats:**\\n• Man-in-the-Middle attacks\\n• DDoS attacks\\n• Packet sniffing\\n• ARP spoofing\\n\\n**Best Practices:**\\n• Regular security updates\\n• Network segmentation\\n• Access control\\n• Monitoring and logging`,\r\n        type: 'ai'\r\n      },\r\n      'ctf': {\r\n        content: `**Capture The Flag (CTF)** challenges test cybersecurity skills in a competitive environment.\\n\\n**Challenge Types:**\\n• **Web**: Web application vulnerabilities\\n• **Forensics**: File analysis and recovery\\n• **Crypto**: Cryptography challenges\\n• **Pwn**: Binary exploitation\\n• **Reverse**: Reverse engineering\\n\\n**Example Challenge:**\\n\\`\\`\\`\\nFlag format: CTF{...}\\nChallenge: Decrypt this message\\nCiphertext: \"KHOOR ZRUOG\"\\nHint: Think about shifting letters\\n\\`\\`\\`\\n\\n**Tools:**\\n• Burp Suite (Web)\\n• Wireshark (Network)\\n• Ghidra (Reverse)\\n• CyberChef (Crypto)`,\r\n        type: 'ai'\r\n      }\r\n    };\r\n\r\n    const lowerInput = userInput.toLowerCase();\r\n    for (const [key, response] of Object.entries(responses)) {\r\n      if (lowerInput.includes(key)) {\r\n        return {\r\n          id: Date.now(),\r\n          content: response.content,\r\n          timestamp: new Date(),\r\n          type: response.type\r\n        };\r\n      }\r\n    }\r\n\r\n    // Default response\r\n    return {\r\n      id: Date.now(),\r\n      content: `I understand you're asking about \"${userInput}\". This is a great cybersecurity topic! Let me provide you with some information and resources to help you learn more.\\n\\n**Key Points:**\\n• Always practice ethical hacking\\n• Stay updated with latest threats\\n• Use proper tools and techniques\\n• Follow responsible disclosure\\n\\nWould you like me to elaborate on any specific aspect of this topic?`,\r\n      timestamp: new Date(),\r\n      type: 'ai'\r\n    };\r\n  };\r\n\r\n  const handleQuickAction = (action) => {\r\n    setInputMessage(action);\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    setIsListening(!isListening);\r\n    // In a real app, this would integrate with Web Speech API\r\n    if (!isListening) {\r\n      // Simulate voice input\r\n      setTimeout(() => {\r\n        setInputMessage('Explain network security');\r\n        setIsListening(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatMessage = (content) => {\r\n    // Simple markdown-like formatting\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, '<pre><code>$2</code></pre>')\r\n      .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-assistant-page\">\r\n      {/* Header */}\r\n      <div className=\"ai-header glass-effect\">\r\n        <div className=\"ai-header-content\">\r\n          <div className=\"ai-avatar\">\r\n            <span className=\"ai-icon\">🤖</span>\r\n          </div>\r\n          <div className=\"ai-info\">\r\n            <h2 className=\"ai-name\">CyberAI Tutor</h2>\r\n            <p className=\"ai-status\">\r\n              {isTyping ? 'Typing...' : 'Online'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"ai-controls\">\r\n          <button className=\"control-btn\" title=\"Export Chat\">\r\n            📥\r\n          </button>\r\n          <button className=\"control-btn\" title=\"Clear Chat\">\r\n            🗑️\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"quick-actions\">\r\n        {quickActions.map((action, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"quick-action-btn\"\r\n            onClick={() => handleQuickAction(action)}\r\n          >\r\n            {action}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Container */}\r\n      <div className=\"chat-container glass-effect\">\r\n        <div className=\"messages-container\">\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.type}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {message.type === 'ai' ? '🤖' : '👤'}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div \r\n                  className=\"message-text\"\r\n                  dangerouslySetInnerHTML={{ \r\n                    __html: formatMessage(message.content) \r\n                  }}\r\n                />\r\n                <div className=\"message-timestamp\">\r\n                  {message.timestamp.toLocaleTimeString()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {isTyping && (\r\n            <div className=\"message ai\">\r\n              <div className=\"message-avatar\">🤖</div>\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"input-container glass-effect\">\r\n        <div className=\"input-wrapper\">\r\n          <textarea\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask me anything about cybersecurity...\"\r\n            className=\"message-input\"\r\n            rows=\"1\"\r\n          />\r\n          <div className=\"input-actions\">\r\n            <button\r\n              className={`voice-btn ${isListening ? 'listening' : ''}`}\r\n              onClick={handleVoiceInput}\r\n              title=\"Voice Input\"\r\n            >\r\n              {isListening ? '🔴' : '🎤'}\r\n            </button>\r\n            <button\r\n              className=\"send-btn\"\r\n              onClick={handleSendMessage}\r\n              disabled={!inputMessage.trim()}\r\n            >\r\n              ➤\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIAssistantPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}