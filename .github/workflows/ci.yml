name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests & Coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Run frontend linting
        run: cd frontend && npm run lint

      - name: Run frontend tests with coverage
        run: cd frontend && npm test -- --coverage --watchAll=false --coverageReporters=text --coverageReporters=lcov --coverageReporters=json-summary

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  test-backend:
    runs-on: ubuntu-latest
    name: Backend Tests & Coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-mock coverage

      - name: Run backend tests with coverage
        run: |
          cd backend
          python -m pytest tests/ --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=70

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    name: Build Application

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build/

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security scan
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  coverage-report:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    name: Coverage Report

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate coverage report
        run: |
          echo "## ðŸ“Š Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- Tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- Tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "### View detailed coverage at:" >> $GITHUB_STEP_SUMMARY
          echo "- [Codecov Dashboard](https://codecov.io/gh/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY 